/* ==========================================================================
   Intrinsic ratio embed - http://j.mp/GIHbnu
   ========================================================================== */

/**
 * Flexible media embeds
 *
 * For use with media embeds – such as videos, slideshows, or even images –
 * that need to retain a specific aspect ratio but adapt to the width of their
 * containing element.
 *
 * Example HTML:
 *
 * <div class="FlexEmbed FlexEmbed--16by9">
 *   <iframe class="FlexEmbed-item" src="…"></iframe>
 * </div>
 *
 * <div class="FlexEmbed FlexEmbed--16by9">
 *   [iframe|object|embed|img]
 * </div>
 *
 * Based on: http://alistapart.com/article/creating-intrinsic-ratios-for-video
 */

/* Component
   ========================================================================== */

.FlexEmbed {
  overflow: hidden;
  position: relative;
  display: block;
}

/**
 * A pseudo-element shunt is used to provide support for `max-height`. The
 * `max-height` property has no affect when using a percentage-padding to set
 * the aspect ratio.
 */

.FlexEmbed:before {
  content: "";
  display: block;
  width: 100%;
}

/* Descendants
   ========================================================================== */

/**
 * Utility of the component is improved by provide an explicit descendant
 * class. However, it will work automatically for iframes, embeds, and objects
 * to account for times when you cannot modify the attributes for 3rd party
 * widget code.
 */

.FlexEmbed-item,
.FlexEmbed iframe,
.FlexEmbed embed,
.FlexEmbed object {
  position: absolute;
  left: 0;
  top: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
}

/* Component modifiers
   ========================================================================== */

/**
 * Modifier: 16:9 aspect ratio
 */

.FlexEmbed--16by9 {
  padding-bottom: 56.25%;
}

/**
 * Modifier: 4:3 aspect ratio
 */

.FlexEmbed--4by3 {
  padding-bottom: 75%;
}